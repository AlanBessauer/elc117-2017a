# Trabalho 8: Ache a maior bolacha em Java

## Deadline

Quarta, 4 de maio, 23:59.


## Problema

Uma padaria produz bolachas em formato de círculos, triângulos e retângulos. A produção é artesanal e não usa moldes, por isso as bolachas podem variar bastante de tamanho. Numa dada fornada, há 50 bolachas de formatos variados, espalhadas sobre uma assadeira retangular. Cada bolacha está numa posição específica, determinada por pontos situados na assadeira, sem sobreposição. Sua tarefa é **localizar a maior bolacha para alegrar o seu lanche** :-). Para isso, você deve calcular a área de cada bolacha, a partir das outras características conhecidas sobre as bolachas (para simplificar, estamos considerando que o espaço é bidimensional).

## Requisitos

- Você deve criar uma solução orientada a objetos (preferencialmente em Java) para resolver o problema acima. Ou seja, seu programa deve ter várias classes e objetos que se relacionam entre si.

- Você deve reutilizar a classe Ponto, que deve ter sido implementada anteriormente na [primeira prática de Java](../../praticas/java1). Cada bolacha será caracterizada por no mínimo um ponto, juntamente com outras características necessárias para calcular a área da bolacha.

- Seu programa deverá criar e armazenar as 50 bolachas numa estrutura de dados, que deverá ser inspecionada para localizar a maior bolacha (isto é, a bolacha com maior área).

- Você deve formular uma estratégia para criar as bolachas, garantindo que elas tenham formatos e áreas variadas, mas que sejam todas círculos ou triângulos ou retângulos. Por exemplo, você pode determinar uma quantidade fixa para cada formato, ou pode estabelecer uma quantidade aleatória. Outros atributos das bolachas também podem combinar valores fixos, calculados ou aleatórios. A classe `java.util.Random` é sua aliada nesta tarefa ;-).

- Você pode escolher a estrutura de dados que julgar mais adequada para guardar as bolachas. Por exemplo: array (veja estes [slides](../../slides/slides-java-arrays-2016a.pdf)), [ArrayList](https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html), entre [outras](https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html).







## Entrega

 1. No seu repositório da disciplina no GitHub, crie uma pasta chamada `t8`.
 3. Coloque todos os arquivos dentro da pasta `t8` (se usar um IDE como NetBeans, coloque todos os arquivos do projeto).
 4. Preencha os dados do seu trabalho [neste formulário](https://docs.google.com/forms/d/1DsRz-RBcHW-1FfFHSGZ9Ac2clkcuT0_Ips99rriXFkE/viewform?fbzx=1355909539722969958).
  
